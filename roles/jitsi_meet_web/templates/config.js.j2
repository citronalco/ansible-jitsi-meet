/* eslint-disable comma-dangle, no-unused-vars, no-var, prefer-template, vars-on-top */

// See /usr/share/jitsi-meet-web-config/config.js for all options
// and https://jitsi.github.io/handbook/docs/dev-guide/dev-guide-configuration for documentation

var enableJaaS = false;

var config = {
    // Connection
    //

    hosts: {
        // XMPP domain.
        domain: '{{ inventory_hostname }}',

        // When using authentication, domain for guest users.
{% if jitsi.guests_allowed is defined and jitsi.guests_allowed %}
        anonymousdomain: 'guest.{{ inventory_hostname }}',
{% else %}
        //anonymousdomain: 'guest.{{ inventory_hostname }}',
{% endif %}
        // XMPP MUC domain. FIXME: use XEP-0030 to discover it.
        muc: 'conference.{{ inventory_hostname }}'
    },

    // BOSH URL. FIXME: use XEP-0156 to discover it.
    bosh: 'https://{{ inventory_hostname }}/http-bind',

    // Websocket URL (XMPP)
    // websocket: 'wss://{{ inventory_hostname }}/xmpp-websocket',

    // Enabling this will run the lib-jitsi-meet no audio detection module which
    // will notify the user if the current selected microphone has no audio
    // input and will suggest another valid device if one is present.
    enableNoAudioDetection: true,

    // Enabling this will run the lib-jitsi-meet noise detection module which will
    // notify the user if there is noise, other than voice, coming from the current
    // selected microphone. The purpose it to let the user know that the input could
    // be potentially unpleasant for other meeting participants.
    enableNoisyMicDetection: true,

    // Every participant after the Nth will start audio muted.
    // startAudioMuted: 1,

    // Every participant after the Nth will start video muted.
    // startVideoMuted: 1,

    // Default value for the channel "last N" attribute. -1 for unlimited.
    channelLastN: -1,

    // Require users to always specify a display name.
    //requireDisplayName: true,

    // Whether to use a welcome page or not. In case it's false a random room
    // will be joined when no room is specified.
    enableWelcomePage: true,

    // Default local name to be displayed
    //defaultLocalDisplayName: 'ich',

    // Default remote name to be displayed
    //defaultRemoteDisplayName: 'Unbekannt',

    // If third party requests are disabled, no other server will be contacted.
    // This means avatars will be locally generated and callstats integration
    // will not function.
    disableThirdPartyRequests: true,


    // Peer-To-Peer mode: used (if enabled) when there are just 2 participants.
    //

    p2p: {
        // Enables peer to peer mode. When enabled the system will try to
        // establish a direct connection when there are exactly 2 participants
        // in the room. If that succeeds the conference will stop sending data
        // through the JVB and use the peer to peer connection instead. When a
        // 3rd participant joins the conference will be moved back to the JVB
        // connection.
        enabled: true,

        // The STUN servers that will be used in the peer to peer connections
        stunServers: [
            { urls: 'stun:{{ inventory_hostname }}:3478' },
{% if turns_hostname is defined %}
            { urls: 'stun:{{ turns_hostname }}:443' },
{% else %}
            { urls: 'stun:{{ inventory_hostname }}:5349' },
{% endif %}
            { urls: 'stun:meet-jit-si-turnrelay.jitsi.net:443' }
        ]
    },

    analytics: {
        // True if the analytics should be disabled
        disabled: true,
    },

    /**
     * Default interval (milliseconds) for triggering mouseMoved iframe API event
     */
    mouseMoveCallbackInterval: 1000,

    // dynamicBrandingUrl: '/branding/branding.json',

    // Allow all above example options to include a trailing comma and
    // prevent fear when commenting out the last value.
    makeJsonParserHappy: 'even if last key had a trailing comma'

    // no configuration value should follow this line.
};

// Temporary backwards compatibility with old mobile clients.
config.flags = config.flags || {};
config.flags.sourceNameSignaling = true;
config.flags.sendMultipleVideoStreams = true;
config.flags.receiveMultipleVideoStreams = true;

