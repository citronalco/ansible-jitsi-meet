- name: Configure Nginx access_log anonymization
  ansible.builtin.template:
    src: anonymize.conf.j2
    dest: /etc/nginx/conf.d/anonymize.conf
    mode: "0644"
  notify: Reload nginx

- name: Create TURNS/HTTPS reverse proxy configuration for TURNS on port 443
  ansible.builtin.template:
    src: coturn-reverse-proxy.conf.j2
    dest: /etc/nginx/modules-available/coturn-reverse-proxy.conf
    mode: "0644"
  when: turns_hostname is defined
  notify: Reload nginx

- name: Enable TURNS/HTTPS reverse proxy configuration for TURNS on port 443
  ansible.builtin.file:
    src: /etc/nginx/modules-available/coturn-reverse-proxy.conf
    dest: /etc/nginx/modules-enabled/coturn-reverse-proxy.conf
    state: link
  when: turns_hostname is defined
  notify: Reload nginx

- name: Disable TURNS/HTTPS reverse proxy configuration for TURNS on port 443
  ansible.builtin.file:
    state: absent
    path: /etc/nginx/modules-enabled/coturn-reverse-proxy.conf
  when: turns_hostname is undefined
  notify: Reload nginx

- name: Create Jitsi-Meet site configuration
  ansible.builtin.template:
    src: jitsi-meet-site.conf.j2
    dest: "/etc/nginx/sites-available/{{ item }}.conf"
    mode: "0644"
  loop: "{{ jitsi.domain_aliases | default([]) + [inventory_hostname] }}"
  notify: Reload nginx

- name: Enable Jitsi-Meet site configuration
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ item }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item }}.conf"
    state: link
  loop: "{{ jitsi.domain_aliases | default([]) + [inventory_hostname] }}"
  when: not ansible_check_mode
  notify: Reload nginx

- name: Get all enabled site configs
  ansible.builtin.find:
    paths: '/etc/nginx/sites-enabled/'
    file_type: link
  register: find_enabledsites

- name: Disable all unneeded site configs
  ansible.builtin.file:
    path: "/etc/nginx/sites-enabled/{{ item.path | basename }}"
    state: absent
  loop: "{{ find_enabledsites.files }}"
  when: item.path | basename not in ( jitsi.domain_aliases | default([]) + [ inventory_hostname ] ) | product(['.conf']) | map('join')
  notify: Reload nginx

- name: Create directories for domains
  ansible.builtin.file:
    path: "/etc/jitsi/meet/{{ item }}"
    state: directory
    mode: "0755"
  loop: "{{ jitsi.domain_aliases | default([]) + [inventory_hostname] }}"

- name: Create directories for customizations for each domain
  ansible.builtin.file:
    path: "/etc/jitsi/meet/{{ item }}/images"
    state: directory
    mode: "0755"
  loop: "{{ jitsi.domain_aliases | default([]) + [inventory_hostname] }}"

#- name: Ensure Jitsi-Meet customization file /etc/jitsi/meet/{{ inventory_hostname }}/nginx-override.conf exists
#  ansible.builtin.template:
#    src: nginx-override.conf.j2
#    dest: "/etc/jitsi/meet/{{ item }}/nginx-override.conf"
#    mode: "0644"
#    force: false
#  loop: "{{ jitsi.domain_aliases | default([]) + [inventory_hostname] }}"
#  register: nginx_override

#- name: Populate customizations directory with Jitsi-Meet default if nginx-override.conf got created
#  ansible.builtin.file:
#    src: "/usr/share/jitsi-meet/{{ item[1] }}"
#    dest: "/etc/jitsi/meet/{{ item[0].item }}/{{ item[1] }}"
#    state: link
#    force: false
#  with_nested:
#    - "{{ nginx_override.results }}"
#    - ["images/favicon.svg", "images/apple-touch-icon.png", "images/watermark.svg"]
#  when: item[0].changed

- name: Populate customizations directory with Jitsi-Meet default if nginx-override.conf got created
  ansible.builtin.file:
    dest: "/etc/jitsi/meet/{{ item[0] }}/{{ item[1] }}"
    state: directory
    mode: "0755"
    force: false
  with_nested:
    - "{{ jitsi.domain_aliases | default([]) + [inventory_hostname] }}"
    - ["branding", "images"]

- name: Create branding.json example file
  ansible.builtin.template:
    src: branding.json.j2
    dest: "/etc/jitsi/meet/{{ item }}/branding/branding.json"
    mode: "0644"
    force: false
  loop: "{{ jitsi.domain_aliases | default([]) + [inventory_hostname] }}"

- name: Create Jitsi-Meet customization file /etc/jitsi/meet/{{ inventory_hostname }}/nginx-override.conf
  ansible.builtin.blockinfile:
    create: true
    path: "/etc/jitsi/meet/{{ item }}/nginx-override.conf"
    mode: "0644"
    insertbefore: BOF
    block: |
      # config.js
      location = /config.default.js { alias /usr/share/jitsi-meet-web-config/config.js; }
      location = /config.local.js { alias /etc/jitsi/meet/{{ item }}/config.local.js; }
      # interface_config.js
      location = /interface_config.js { alias /etc/jitsi/meet/{{ item }}/interface_config.js;  }
      location = /interface_config.default.js { alias /usr/share/jitsi-meet/interface_config.js; }
      location = /interface_config.local.js { alias /etc/jitsi/meet/{{ item }}/interface_config.local.js; }
      # branding files (see "External API url used to receive branding specific information" in config.json)
      location ~ ^/branding/(.+)$ { alias /etc/jitsi/meet/{{ item }}/branding/$1; }

      # YOU MAY SAFELY INSERT CUSTOMIZATIONS BELOW THIS BLOCK
      # e.g.
      # location = /static/welcomePageAdditionalContent.html { alias /etc/jitsi/meet/{{ item }}/welcomePageAdditionalContent.html; }
      # location = /favicon.svg { alias /etc/jitsi/meet/{{ item }}/images/favicon.svg; }
      # location = /images/favicon.svg { alias /etc/jitsi/meet/{{ item }}/images/favicon.svg; }
      # location = /images/apple-touch-icon.png { alias /etc/jitsi/meet/{{ item }}/images/apple-touch-icon.png; }
      # location = /images/watermark.svg { alias /etc/jitsi/meet/{{ item }}/images/watermark.svg; }

  loop: "{{ jitsi.domain_aliases | default([]) + [inventory_hostname] }}"
  notify: Reload nginx

- name: Create config.js
  ansible.builtin.template:
    src: config.js.j2
    dest: "/etc/jitsi/meet/{{ item }}/config.js"
    mode: "0644"
  loop: "{{ jitsi.domain_aliases | default([]) + [inventory_hostname] }}"

- name: Create minimal custom Jitsi Meet configuration if none exists
  ansible.builtin.template:
    src: config.local.js.j2
    dest: "/etc/jitsi/meet/{{ item }}/config.local.js"
    mode: "0644"
    force: false
  loop: "{{ jitsi.domain_aliases | default([]) + [inventory_hostname] }}"

- name: Rename autogenerated /etc/jitsi/meet/DOMAINNAME-config.js to avoid confusion
  ansible.builtin.command: mv /etc/jitsi/meet/{{ item }}-config.js /etc/jitsi/meet/{{ item }}-config.js.dist
  args:
    removes: /etc/jitsi/meet/{{ item }}-config.js
  loop: "{{ jitsi.domain_aliases | default([]) + [inventory_hostname] }}"

- name: Create interface_config.js
  ansible.builtin.template:
    src: interface_config.js.j2
    dest: "/etc/jitsi/meet/{{ item }}/interface_config.js"
    mode: "0644"
  loop: "{{ jitsi.domain_aliases | default([]) + [inventory_hostname] }}"

- name: Create minimal custom Jitsi Meet interface configuration if none exists
  ansible.builtin.template:
    src: interface_config.local.js.j2
    dest: "/etc/jitsi/meet/{{ item }}/interface_config.local.js"
    mode: "0644"
    force: false
  loop: "{{ jitsi.domain_aliases | default([]) + [inventory_hostname] }}"
