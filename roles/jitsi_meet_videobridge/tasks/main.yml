- name: Set MUC domain in sip-communicator.properties
  ansible.builtin.lineinfile:
    path: /etc/jitsi/videobridge/sip-communicator.properties
    regexp: '^org.jitsi.videobridge.xmpp.user.shard.MUC_JIDS='
    line: "org.jitsi.videobridge.xmpp.user.shard.MUC_JIDS=JvbBrewery@internal.auth.{{ inventory_hostname }}"
  notify:
    - Restart jitsi-videobridge2

- name: Set Trusted-Domains in sip-communicator.properties
  ansible.builtin.lineinfile:
    path: /etc/jitsi/videobridge/sip-communicator.properties
    regexp: '^org.jitsi.videobridge.xmpp.user.shard.DOMAIN='
    line: "org.jitsi.videobridge.xmpp.user.shard.DOMAIN=auth.{{ inventory_hostname }}"
  notify:
    - Restart jitsi-videobridge2

- name: Set Videobrige password in sip-communicator.properties
  ansible.builtin.lineinfile:
    path: /etc/jitsi/videobridge/sip-communicator.properties
    regexp: '^org.jitsi.videobridge.xmpp.user.shard.PASSWORD='
    line: "org.jitsi.videobridge.xmpp.user.shard.PASSWORD={{ jvbpwd }}"
  notify:
    - Restart jitsi-videobridge2

# Only used if server is behind NAT
#- name: Set stun server in sip-communicator.properties
#  ansible.builtin.lineinfile:
#    path: /etc/jitsi/videobridge/sip-communicator.properties
#    regexp: '^org.ice4j.ice.harvest.STUN_MAPPING_HARVESTER_ADDRESSES='
#    line: "org.ice4j.ice.harvest.STUN_MAPPING_HARVESTER_ADDRESSES={{ inventory_hostname }}:3478"
#  notify:
#    - Restart jitsi-videobridge2

- name: Set Videobridge password in Videobridge config
  ansible.builtin.lineinfile:
    path: /etc/jitsi/videobridge/config
    regexp: '^JVB_SECRET='
    line: "JVB_SECRET={{ jvbpwd }}"
  notify:
    - Restart jitsi-videobridge2

- name: Set Hostname in Videobridge config
  ansible.builtin.lineinfile:
    path: /etc/jitsi/videobridge/config
    regexp: '^JVB_HOSTNAME='
    line: "JVB_HOSTNAME={{ inventory_hostname }}"
  notify:
    - Restart jitsi-videobridge2

- name: Set Hostname for Videobridge websocket in jvb.conf
  ansible.builtin.lineinfile:
    path: /etc/jitsi/videobridge/jvb.conf
    regexp: '^(\s*)domain =.*:443'
    backrefs: true
    line: '\1domain = "{{ inventory_hostname }}:443"'
  notify:
    - Restart jitsi-videobridge2

- name: Decrease Videobridge loglevel
  ansible.builtin.lineinfile:
    path: /etc/jitsi/videobridge/logging.properties
    regexp: '^\.level='
    line: ".level=WARNING"
  notify:
    - Restart jitsi-videobridge2

- name: Check if REST API is enabled for statistics
  ansible.builtin.lineinfile:
    state: absent
    path: /etc/jitsi/videobridge/jvb.conf
    regexp: "^\\s*apis { rest { enabled = true } }"
  check_mode: true
  changed_when: false
  register: rest_api

- name: Enable REST API
  ansible.builtin.lineinfile:
    path: /etc/jitsi/videobridge/jvb.conf
    insertafter: "videobridge {"
    line: "    apis { rest { enabled = true } }"
  when: not rest_api.found
  notify:
    - Restart jitsi-videobridge2
