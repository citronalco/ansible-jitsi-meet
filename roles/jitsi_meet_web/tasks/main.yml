- name: Configure Nginx access_log anonymization
  ansible.builtin.template:
    src: anonymize.conf.j2
    dest: /etc/nginx/conf.d/anonymize.conf
    mode: "0644"
  notify: Reload nginx

- name: Create TURNS/HTTPS reverse proxy configuration
  ansible.builtin.template:
    src: coturn-reverse-proxy.conf.j2
    dest: /etc/nginx/modules-available/coturn-reverse-proxy.conf
    mode: "0644"
  notify: Reload nginx

- name: Enable TURNS/HTTPS reverse proxy configuration
  ansible.builtin.file:
    src: /etc/nginx/modules-available/coturn-reverse-proxy.conf
    dest: /etc/nginx/modules-enabled/coturn-reverse-proxy.conf
    state: link
  notify: Reload nginx

- name: Create Jitsi-Meet site configuration
  ansible.builtin.template:
    src: jitsi-meet-site.conf.j2
    dest: "/etc/nginx/sites-available/{{ item }}.conf"
    mode: "0644"
  loop: "{{ jitsi.domain_aliases | default([]) + [inventory_hostname] }}"
  notify: Reload nginx

- name: Enable Jitsi-Meet site configuration
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ item }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item }}.conf"
    state: link
  loop: "{{ jitsi.domain_aliases | default([]) + [inventory_hostname] }}"
  when: not ansible_check_mode
  notify: Reload nginx

- name: Get all enabled site configs
  ansible.builtin.find:
    paths: '/etc/nginx/sites-enabled/'
    file_type: link
  register: find_enabledsites

- name: Disable all unneeded site configs
  ansible.builtin.file:
    path: "/etc/nginx/sites-enabled/{{ item.path | basename }}"
    state: absent
  loop: "{{ find_enabledsites.files }}"
  when: item.path | basename not in ( jitsi.domain_aliases | default([]) + [ inventory_hostname ] ) | product(['.conf']) | map('join')
  notify: Reload nginx

- name: Create directories for domains
  ansible.builtin.file:
    path: "/etc/jitsi/meet/{{ item }}"
    state: directory
    mode: "0755"
  loop: "{{ jitsi.domain_aliases | default([]) + [inventory_hostname] }}"

- name: Create directories for customizations for each domain
  ansible.builtin.file:
    path: "/etc/jitsi/meet/{{ item }}/images"
    state: directory
    mode: "0755"
  loop: "{{ jitsi.domain_aliases | default([]) + [inventory_hostname] }}"

- name: Ensure Jitsi-Meet customization file /etc/jitsi/meet/{{ inventory_hostname }}/nginx-override.conf exists
  ansible.builtin.template:
    src: nginx-override.conf.j2
    dest: "/etc/jitsi/meet/{{ item }}/nginx-override.conf"
    mode: "0644"
    force: false
  loop: "{{ jitsi.domain_aliases | default([]) + [inventory_hostname] }}"
  register: nginx_override

- name: Populate customizations directory with Jitsi-Meet default if nginx-override.conf got created
  ansible.builtin.file:
    src: "/usr/share/jitsi-meet/{{ item[1] }}"
    dest: "/etc/jitsi/meet/{{ item[0].item }}/{{ item[1] }}"
    state: link
    force: false
  with_nested:
    - "{{ nginx_override.results }}"
    - ["images/favicon.ico", "images/apple-touch-icon.png", "images/watermark.svg", "interface_config.js"]
  when: item[0].changed

- name: Create minimal default Jitsi Meet configuration if none exists
  ansible.builtin.template:
    src: config.js.j2
    dest: "/etc/jitsi/meet/{{ item }}/config.js"
    mode: "0644"
    force: false
  loop: "{{ jitsi.domain_aliases | default([]) + [inventory_hostname] }}"

- name: Rename autogenerated /etc/jitsi/meet/DOMAINNAME-config.js to avoid confusion
  ansible.builtin.command: mv /etc/jitsi/meet/{{ item }}-config.js /etc/jitsi/meet/{{ item }}-config.js.dist
  args:
    removes: /etc/jitsi/meet/{{ item }}-config.js
  loop: "{{ jitsi.domain_aliases | default([]) + [inventory_hostname] }}"
