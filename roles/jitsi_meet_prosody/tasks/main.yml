- name: Install Prosody
  apt:
    pkg: [ "prosody", "lua-event" ]

- name: Create Prosody vHost configuration
  template:
    src: "prosody-vhost.cfg.j2"
    dest: "/etc/prosody/conf.avail/{{ inventory_hostname }}.cfg.lua"
    mode: "0644"
  notify: restart prosody

- name: Enable Prosody vHost configuration
  file:
    src: "/etc/prosody/conf.avail/{{ inventory_hostname }}.cfg.lua"
    dest: "/etc/prosody/conf.d/{{ inventory_hostname }}.cfg.lua"
    state: link
  notify: restart prosody

- name: Get all enabled Prosody vHost configurations
  find:
    paths: '/etc/prosody/conf.d/'
    file_type: link
  register: find_enabledsites

- name: Disable all unneeded Prosody vHost configurations
  file:
    path: "/etc/prosody/conf.d/{{ item.path | basename }}"
    state: absent
  loop: "{{ find_enabledsites.files }}"
  when: item.path | basename not in ("localhost", inventory_hostname + ".cfg.lua")
  notify: restart prosody

- name: Create self-signed internal Prosody certificates
  shell:
    cmd: "/usr/bin/echo | /usr/bin/prosodyctl cert generate {{ item }}"
    creates: "/var/lib/prosody/{{ item }}.crt"
  loop:
    - "{{ inventory_hostname }}"
    - "auth.{{ inventory_hostname }}"
  notify: restart prosody

- name: Symlinks certificates into Prosody
  file:
    src: "/var/lib/prosody/{{ item }}"
    dest: "/etc/prosody/certs/{{ item }}"
    state: link
  loop:
    - "{{ inventory_hostname }}.crt"
    - "{{ inventory_hostname }}.key"
    - "auth.{{ inventory_hostname }}.crt"
    - "auth.{{ inventory_hostname }}.key"
  notify: restart prosody

- name: Symlinks certificates into /usr/local/share/ca-certificates/, required for Java (Videobridge)
  file:
    src: "/var/lib/prosody/{{ item }}"
    dest: "/usr/local/share/ca-certificates/{{ item }}"
    state: link
  loop:
    - "auth.{{ inventory_hostname }}.crt"
  notify:
    - update-ca-certificates
    - restart jitsi videobridge2

### Ensure Prosody users exist and have correct passwords
# Prosody does not need to run for this
- name: register Jicofo user (focus)
  shell:
    cmd: "prosodyctl register focus auth.{{ inventory_hostname }} {{ jicofopwd }}"

- name: Make sure the focus@auth users roster includes the proxy component
  shell:
    cmd: "prosodyctl mod_roster_command subscribe focus.{{ inventory_hostname }} focus@auth.{{ inventory_hostname }}"

- name: register Videobridge users (jvb)
  shell:
    cmd: "prosodyctl register jvb auth.{{ inventory_hostname }} {{ jvbpwd }}"

# Password f端r jibri@auth.meet.mydomain f端r Aufnahmen mit Jibri
#- name: register Jibri users in auth domain
#  shell:
#    cmd: "prosodyctl register jibri auth.{{ inventory_hostname }} {{ jitsi.jibri_password }}"
#  when: jitsi.jibri_password is defined

# Password f端r recorder@recording.mydomain f端r Aufnahmen mit Jibri
#- name: register Jibri users in recorder domain
#  shell:
#    cmd: "prosodyctl register recorder recorder.{{ inventory_hostname }} {{ jitsi.recorder_password }}"
#  when: jitsi.recorder_password is defined
